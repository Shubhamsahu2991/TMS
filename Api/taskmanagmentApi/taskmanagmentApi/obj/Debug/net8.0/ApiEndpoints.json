[
  {
    "ContainingType": "taskmanagmentApi.Controllers.AuthController",
    "Method": "Getroles",
    "RelativePath": "api/Auth/Getroles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.AuthController",
    "Method": "GetUserWithroles",
    "RelativePath": "api/Auth/GetUserWithroles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "taskmanagmentApi.DTOs.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.AuthController",
    "Method": "Logout",
    "RelativePath": "api/Auth/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.AuthController",
    "Method": "GetCurrentUser",
    "RelativePath": "api/Auth/me",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "taskmanagmentApi.DTOs.RegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.DepartmentController",
    "Method": "AssignUsers",
    "RelativePath": "api/Department/assign",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "taskmanagmentApi.DTOs.UserManagerMappingDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.DepartmentController",
    "Method": "GetDepartments",
    "RelativePath": "api/Department/getDepartment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.DepartmentController",
    "Method": "GetHierarchy",
    "RelativePath": "api/Department/hierarchy",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.DepartmentController",
    "Method": "createDepartment",
    "RelativePath": "api/Department/insertDepartment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDepartmentDto",
        "Type": "taskmanagmentApi.DTOs.CreateDepartmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "taskmanagmentApi.DTOs.DepartmentResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.ProjectController",
    "Method": "AssignUsers",
    "RelativePath": "api/Project/assign-users",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "taskmanagmentApi.DTOs.ProjectAssignUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.ProjectController",
    "Method": "GetModule",
    "RelativePath": "api/Project/getmodule/{projectId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "projectId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.ProjectController",
    "Method": "GetProjects",
    "RelativePath": "api/Project/getproject",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.ProjectController",
    "Method": "createmodule",
    "RelativePath": "api/Project/insertmodule",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createModuleDto",
        "Type": "taskmanagmentApi.DTOs.CreateModuleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "taskmanagmentApi.DTOs.CreateModuleDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.ProjectController",
    "Method": "CreateProject",
    "RelativePath": "api/Project/insertproject",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createProjectDto",
        "Type": "taskmanagmentApi.DTOs.CreateProjectDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "taskmanagmentApi.DTOs.ProjectResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.TaskController",
    "Method": "Create",
    "RelativePath": "api/Task/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "taskmanagmentApi.DTOs.TaskCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.TaskController",
    "Method": "Delete",
    "RelativePath": "api/Task/DeletetaskbyId/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.TaskController",
    "Method": "GetAll",
    "RelativePath": "api/Task/GetAlltask",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.TaskController",
    "Method": "GetById",
    "RelativePath": "api/Task/GettaskIdsByModule/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.TaskController",
    "Method": "GetUserIdsByModule",
    "RelativePath": "api/Task/GetUserIdsByModule/{moduleId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "moduleId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.TaskController",
    "Method": "GetPriorities",
    "RelativePath": "api/Task/priorities",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.TaskController",
    "Method": "GetStatus",
    "RelativePath": "api/Task/Status",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.TaskController",
    "Method": "Update",
    "RelativePath": "api/Task/updatetaskbyId/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "taskmanagmentApi.DTOs.TaskCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.UserController",
    "Method": "GetUsers",
    "RelativePath": "api/User/getAllUser",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "taskmanagmentApi.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[taskmanagmentApi.WeatherForecast, taskmanagmentApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]